{"version":3,"sources":["components/Pages/Login.module.css","components/Pages/Login.js","hooks/use-validate.jsx","components/Layout/Buttons.jsx","components/Layout/Buttons.module.css"],"names":["module","exports","Login","useState","error","setError","loading","setLoading","dispatch","useContext","AuthContext","navigate","useNavigate","useValidate","value","trim","length","enteredPassword","passwordInputHasErr","hasError","enteredPasswordIsValid","valueIsValid","passwordChangeHandler","valueHandler","passwordBlurHandler","valueBlurHandler","resetPasswordInput","reset","includes","enteredEmail","emailInputHasErr","emailInputIsValid","emailChangeHandler","emailBlurHandler","resetEmailInput","formIsValid","emailErrClass","passwordErrClass","className","classes","login","loginTitle","variant","loginForm","onSubmit","e","preventDefault","signInWithEmailAndPassword","auth","then","userCredential","user","type","payload","window","location","reload","catch","message","placeholder","loginInput","onChange","onBlur","btn","disabled","to","links","validateValue","valueEntered","setValueEntered","valueIsTouched","setValueIsTouched","target","Buttons","props","classListName","onClick","children"],"mappings":"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","file":"static/js/12.e45836d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__-d0Wd\",\"loginTitle\":\"Login_loginTitle__1lLVO\",\"loginForm\":\"Login_loginForm__2OLfB\",\"loginInput\":\"Login_loginInput__39csA\",\"btn\":\"Login_btn__7MQrx\",\"links\":\"Login_links__16Msr\",\"error_span\":\"Login_error_span__1Fas2\"};","import React, { useState, useContext } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport classes from \"./Login.module.css\";\r\nimport { Fragment } from \"react\";\r\nimport useValidate from \"../../hooks/use-validate\";\r\nimport Buttons from \"../Layout/Buttons\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth } from \"../../firebaseConfig/Firebase\";\r\nimport { AuthContext } from \"../../store/auth-context\";\r\nimport { Form, Alert } from \"react-bootstrap\";\r\n\r\nexport default function Login() {\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { dispatch } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const {\r\n    value: enteredPassword,\r\n    hasError: passwordInputHasErr,\r\n    valueIsValid: enteredPasswordIsValid,\r\n    valueHandler: passwordChangeHandler,\r\n    valueBlurHandler: passwordBlurHandler,\r\n    reset: resetPasswordInput,\r\n  } = useValidate((value) => value.trim().length > 6);\r\n\r\n  const {\r\n    value: enteredEmail,\r\n    hasError: emailInputHasErr,\r\n    valueIsValid: emailInputIsValid,\r\n    valueHandler: emailChangeHandler,\r\n    valueBlurHandler: emailBlurHandler,\r\n    reset: resetEmailInput,\r\n  } = useValidate((value) => value.includes(\"@\"));\r\n\r\n  let formIsValid = false;\r\n\r\n  if (emailInputIsValid && enteredPasswordIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const formHandler = (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setLoading(true);\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    signInWithEmailAndPassword(auth, enteredEmail, enteredPassword)\r\n      .then((userCredential) => {\r\n        // Signed in\r\n\r\n        const user = userCredential.user;\r\n\r\n        // ...\r\n        dispatch({ type: \"LOGIN\", payload: user });\r\n        navigate(\"/\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n        setLoading(false);\r\n      });\r\n\r\n    resetEmailInput();\r\n    resetPasswordInput();\r\n  };\r\n\r\n  const emailErrClass = emailInputHasErr ? \"control invalid\" : \"control\";\r\n\r\n  const passwordErrClass = passwordInputHasErr ? \"control invalid\" : \"control\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.login}>\r\n        <span className={classes.loginTitle}>Login</span>\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        <Form className={classes.loginForm} onSubmit={formHandler}>\r\n          <div className={emailErrClass}>\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Enter your Email\"\r\n              className={classes.loginInput}\r\n              onChange={emailChangeHandler}\r\n              value={enteredEmail}\r\n              onBlur={emailBlurHandler}\r\n            />\r\n            {emailInputHasErr && (\r\n              <p className=\"error-text\">Please enter a valid email</p>\r\n            )}\r\n          </div>\r\n          <div className={passwordErrClass}>\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              className={classes.loginInput}\r\n              onChange={passwordChangeHandler}\r\n              value={enteredPassword}\r\n              onBlur={passwordBlurHandler}\r\n            />\r\n            {passwordInputHasErr && (\r\n              <p className=\"error-text\">\r\n                Enter valid password (more than 6 character)\r\n              </p>\r\n            )}\r\n          </div>\r\n          <Buttons className={classes.btn} disabled={!formIsValid}>\r\n            {loading && <i className=\"fa fa-refresh fa-spin\" />}\r\n            Login\r\n          </Buttons>\r\n\r\n          <Link className=\"link\" to=\"/password\">\r\n            Forget Password?\r\n          </Link>\r\n\r\n          <p className={classes.links}>\r\n            Dont have an account?\r\n            <Link className=\"link\" to=\"/register\">\r\n              Register?\r\n            </Link>\r\n          </p>\r\n          {/* {error && <span>Wrong email or password!!!</span>} */}\r\n        </Form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nconst useValidate = (validateValue) => {\r\n  const [valueEntered, setValueEntered] = useState(\"\");\r\n  const [valueIsTouched, setValueIsTouched] = useState(false);\r\n\r\n  const valueIsValid = validateValue(valueEntered);\r\n  const valueHasError = !valueIsValid && valueIsTouched;\r\n\r\n  const valueHandler = (e) => {\r\n    setValueEntered(e.target.value);\r\n  };\r\n\r\n  const valueBlurHandler = (e) => {\r\n    setValueIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    setValueEntered(\"\");\r\n    setValueIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value: valueEntered,\r\n    hasError: valueHasError,\r\n    valueIsValid,\r\n    valueHandler,\r\n    valueBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useValidate;\r\n","import React from \"react\";\r\nimport classes from \"./Buttons.module.css\";\r\n\r\nfunction Buttons(props) {\r\n  const classListName = `${props.className} ${classes.btn}`;\r\n\r\n  return (\r\n    <button\r\n      className={classListName}\r\n      disabled={props.disabled}\r\n      onClick={props.onClick}\r\n      type={props.type}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Buttons_btn__2wJow\"};"],"sourceRoot":""}