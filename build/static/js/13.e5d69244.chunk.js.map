{"version":3,"sources":["components/Pages/Login.module.css","components/Pages/Register.js","hooks/use-validate.jsx","components/Layout/Buttons.jsx","components/Layout/Buttons.module.css"],"names":["module","exports","Login","props","useState","error","setError","React","open","setOpen","loading","setLoading","dispatch","useContext","AuthContext","navigate","useNavigate","useValidate","value","trim","length","enteredPassword","passwordInputHasErr","hasError","enteredPasswordIsValid","valueIsValid","passwordChangeHandler","valueHandler","passwordBlurHandler","valueBlurHandler","resetPasswordInput","reset","includes","enteredEmail","emailInputHasErr","emailInputIsValid","emailChangeHandler","emailBlurHandler","resetEmailInput","formIsValid","handleClose","event","reason","emailErrClass","passwordErrClass","className","classes","login","loginTitle","loginForm","onSubmit","e","preventDefault","createUserWithEmailAndPassword","auth","then","userCredential","register","user","console","log","toast","success","position","type","catch","placeholder","loginInput","onChange","onBlur","btn","disabled","autoHideDuration","onClose","elevation","variant","severity","sx","width","validateValue","valueEntered","setValueEntered","valueIsTouched","setValueIsTouched","target","Buttons","classListName","onClick","children"],"mappings":"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","file":"static/js/13.e5d69244.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__-d0Wd\",\"loginTitle\":\"Login_loginTitle__1lLVO\",\"loginForm\":\"Login_loginForm__2OLfB\",\"loginInput\":\"Login_loginInput__39csA\",\"btn\":\"Login_btn__7MQrx\",\"links\":\"Login_links__16Msr\",\"error_span\":\"Login_error_span__1Fas2\"};","import React, { useState, useContext } from \"react\";\r\nimport classes from \"./Login.module.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Fragment } from \"react\";\r\nimport useValidate from \"../../hooks/use-validate\";\r\nimport Buttons from \"../Layout/Buttons\";\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth } from \"../../firebaseConfig/Firebase\";\r\nimport { AuthContext } from \"../../store/auth-context\";\r\nimport { Snackbar } from \"@mui/material\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function Login(props) {\r\n  const [error, setError] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { dispatch } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  const {\r\n    value: enteredPassword,\r\n    hasError: passwordInputHasErr,\r\n    valueIsValid: enteredPasswordIsValid,\r\n    valueHandler: passwordChangeHandler,\r\n    valueBlurHandler: passwordBlurHandler,\r\n    reset: resetPasswordInput,\r\n  } = useValidate((value) => value.trim().length > 6);\r\n\r\n  const {\r\n    value: enteredEmail,\r\n    hasError: emailInputHasErr,\r\n    valueIsValid: emailInputIsValid,\r\n    valueHandler: emailChangeHandler,\r\n    valueBlurHandler: emailBlurHandler,\r\n    reset: resetEmailInput,\r\n  } = useValidate((value) => value.includes(\"@\"));\r\n\r\n  let formIsValid = false;\r\n\r\n  if (emailInputIsValid && enteredPasswordIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const formHandler = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    createUserWithEmailAndPassword(auth, enteredEmail, enteredPassword)\r\n      .then((userCredential) => {\r\n        // Signed in\r\n        const register = userCredential.user;\r\n        console.log(register);\r\n        toast.success(\"Your account has been successfully registered\", {\r\n          position: \"bottom-left\",\r\n        });\r\n        // ...\r\n        dispatch({ type: \"REGISTER\" });\r\n        navigate(\"/sign-in\");\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n        toast.error(\"Please enter a valid email or password\", {\r\n          position: \"bottom-left\",\r\n        });\r\n        setLoading(false);\r\n        // ..\r\n      });\r\n\r\n    resetEmailInput();\r\n    resetPasswordInput();\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const emailErrClass = emailInputHasErr ? \"control invalid\" : \"control\";\r\n\r\n  const passwordErrClass = passwordInputHasErr ? \"control invalid\" : \"control\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.login}>\r\n        <span className={classes.loginTitle}>Register</span>\r\n\r\n        <form className={classes.loginForm} onSubmit={formHandler}>\r\n          <div className={emailErrClass}>\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Enter your Email\"\r\n              className={classes.loginInput}\r\n              onChange={emailChangeHandler}\r\n              value={enteredEmail}\r\n              onBlur={emailBlurHandler}\r\n            />\r\n            {emailInputHasErr && (\r\n              <p className=\"error-text\">Please enter a valid email</p>\r\n            )}\r\n          </div>\r\n          <div className={passwordErrClass}>\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              className={classes.loginInput}\r\n              onChange={passwordChangeHandler}\r\n              value={enteredPassword}\r\n              onBlur={passwordBlurHandler}\r\n            />\r\n            {passwordInputHasErr && (\r\n              <p className=\"error-text\">\r\n                Enter valid password (more than 6 character)\r\n              </p>\r\n            )}\r\n          </div>\r\n          <Buttons className={classes.btn} disabled={!formIsValid}>\r\n            {loading && <i className=\"fa fa-refresh fa-spin\" />}Register\r\n          </Buttons>\r\n          {error ? (\r\n            <span className=\"error-text\">\r\n              Email has already been registered!!!\r\n            </span>\r\n          ) : (\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n              <Alert\r\n                elevation={6}\r\n                variant=\"filled\"\r\n                onClose={handleClose}\r\n                severity=\"success\"\r\n                sx={{ width: \"100%\" }}\r\n              >\r\n                Your Account has been successfully Registered!\r\n              </Alert>\r\n            </Snackbar>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nconst useValidate = (validateValue) => {\r\n  const [valueEntered, setValueEntered] = useState(\"\");\r\n  const [valueIsTouched, setValueIsTouched] = useState(false);\r\n\r\n  const valueIsValid = validateValue(valueEntered);\r\n  const valueHasError = !valueIsValid && valueIsTouched;\r\n\r\n  const valueHandler = (e) => {\r\n    setValueEntered(e.target.value);\r\n  };\r\n\r\n  const valueBlurHandler = (e) => {\r\n    setValueIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    setValueEntered(\"\");\r\n    setValueIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value: valueEntered,\r\n    hasError: valueHasError,\r\n    valueIsValid,\r\n    valueHandler,\r\n    valueBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useValidate;\r\n","import React from \"react\";\r\nimport classes from \"./Buttons.module.css\";\r\n\r\nfunction Buttons(props) {\r\n  const classListName = `${props.className} ${classes.btn}`;\r\n\r\n  return (\r\n    <button\r\n      className={classListName}\r\n      disabled={props.disabled}\r\n      onClick={props.onClick}\r\n      type={props.type}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Buttons_btn__2wJow\"};"],"sourceRoot":""}