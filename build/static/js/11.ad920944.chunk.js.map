{"version":3,"sources":["components/Pages/ForgotPassword.module.css","components/Pages/ForgotPassword.js","hooks/use-validate.jsx","components/Layout/Buttons.jsx","components/Layout/Buttons.module.css"],"names":["module","exports","Login","props","forgotPassword","useContext","AuthContext","useValidate","value","includes","enteredEmail","emailInputHasErr","hasError","emailInputIsValid","valueIsValid","emailChangeHandler","valueHandler","emailBlurHandler","valueBlurHandler","resetEmailInput","reset","formIsValid","formHandler","e","a","preventDefault","then","res","console","log","toast","success","position","catch","err","message","error","emailErrClass","className","classes","login","loginTitle","loginForm","onSubmit","type","placeholder","loginInput","onChange","onBlur","btn","disabled","validateValue","useState","valueEntered","setValueEntered","valueIsTouched","setValueIsTouched","target","Buttons","classListName","onClick","children"],"mappings":"wHACAA,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,WAAa,mCAAmC,UAAY,kCAAkC,WAAa,mCAAmC,IAAM,8B,2KCO7L,SAASC,EAAMC,GAC5B,IAAQC,EAAmBC,qBAAWC,KAA9BF,eAER,EAOIG,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAAS,QANjCC,EADT,EACEF,MACUG,EAFZ,EAEEC,SACcC,EAHhB,EAGEC,aACcC,EAJhB,EAIEC,aACkBC,EALpB,EAKEC,iBACOC,EANT,EAMEC,MAGEC,GAAc,EAEdR,IACFQ,GAAc,GAGhB,IAAMC,EAAW,uCAAG,WAAOC,GAAP,SAAAC,EAAA,yDAClBD,EAAEE,iBAEGJ,EAHa,iDAMlBF,IAEAf,EAAeM,GACZgB,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZG,IAAMC,QAAQ,qCAAsC,CAClDC,SAAU,mBAGbC,OAAM,SAACC,GACNN,QAAQC,IAAIK,EAAIC,SAChBL,IAAMM,MAAM,mBAAoB,CAC9BJ,SAAU,mBAlBE,2CAAH,sDAuBXK,EAAgB1B,EAAmB,kBAAoB,UAE7D,OACE,cAAC,WAAD,UACE,sBAAK2B,UAAWC,IAAQC,MAAxB,UACE,sBAAMF,UAAWC,IAAQE,WAAzB,oCACA,uBAAMH,UAAWC,IAAQG,UAAWC,SAAUrB,EAA9C,UACE,sBAAKgB,UAAWD,EAAhB,UACE,0CACA,uBACEO,KAAK,QACLC,YAAY,mBACZP,UAAWC,IAAQO,WACnBC,SAAUhC,EACVP,MAAOE,EACPsC,OAAQ/B,IAETN,GACC,mBAAG2B,UAAU,aAAb,2CAIJ,cAAC,IAAD,CAASA,UAAWC,IAAQU,IAAKC,UAAW7B,EAA5C,+B,mDCvCKd,IA9BK,SAAC4C,GACnB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAEM1C,EAAeqC,EAAcE,GAgBnC,MAAO,CACL7C,MAAO6C,EACPzC,UAjBqBE,GAAgByC,EAkBrCzC,eACAE,aAjBmB,SAACO,GACpB+B,EAAgB/B,EAAEkC,OAAOjD,QAiBzBU,iBAduB,SAACK,GACxBiC,GAAkB,IAclBpC,MAXY,WACZkC,EAAgB,IAChBE,GAAkB,O,gCCnBtB,iCAkBeE,IAff,SAAiBvD,GACf,IAAMwD,EAAa,UAAMxD,EAAMmC,UAAZ,YAAyBC,IAAQU,KAEpD,OACE,wBACEX,UAAWqB,EACXT,SAAU/C,EAAM+C,SAChBU,QAASzD,EAAMyD,QACfhB,KAAMzC,EAAMyC,KAJd,SAMGzC,EAAM0D,a,mBCZb7D,EAAOC,QAAU,CAAC,IAAM","file":"static/js/11.ad920944.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"ForgotPassword_login__27td8\",\"loginTitle\":\"ForgotPassword_loginTitle__3SMMe\",\"loginForm\":\"ForgotPassword_loginForm__3Nf2i\",\"loginInput\":\"ForgotPassword_loginInput__pbXw_\",\"btn\":\"ForgotPassword_btn__31sPp\"};","import React, { useContext } from \"react\";\r\nimport classes from \"./ForgotPassword.module.css\";\r\nimport { Fragment } from \"react\";\r\nimport useValidate from \"../../hooks/use-validate\";\r\nimport Buttons from \"../Layout/Buttons\";\r\nimport { AuthContext } from \"../../store/auth-context\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function Login(props) {\r\n  const { forgotPassword } = useContext(AuthContext);\r\n\r\n  const {\r\n    value: enteredEmail,\r\n    hasError: emailInputHasErr,\r\n    valueIsValid: emailInputIsValid,\r\n    valueHandler: emailChangeHandler,\r\n    valueBlurHandler: emailBlurHandler,\r\n    reset: resetEmailInput,\r\n  } = useValidate((value) => value.includes(\"@\"));\r\n\r\n  let formIsValid = false;\r\n\r\n  if (emailInputIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const formHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n    resetEmailInput();\r\n\r\n    forgotPassword(enteredEmail)\r\n      .then((res) => {\r\n        console.log(res);\r\n        toast.success(\"Check your email to reset password\", {\r\n          position: \"bottom-left\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n        toast.error(\"Email is invalid\", {\r\n          position: \"bottom-left\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const emailErrClass = emailInputHasErr ? \"control invalid\" : \"control\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.login}>\r\n        <span className={classes.loginTitle}>Retrieve your password</span>\r\n        <form className={classes.loginForm} onSubmit={formHandler}>\r\n          <div className={emailErrClass}>\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Enter your Email\"\r\n              className={classes.loginInput}\r\n              onChange={emailChangeHandler}\r\n              value={enteredEmail}\r\n              onBlur={emailBlurHandler}\r\n            />\r\n            {emailInputHasErr && (\r\n              <p className=\"error-text\">Please enter a valid email</p>\r\n            )}\r\n          </div>\r\n\r\n          <Buttons className={classes.btn} disabled={!formIsValid}>\r\n            Confirm\r\n          </Buttons>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nconst useValidate = (validateValue) => {\r\n  const [valueEntered, setValueEntered] = useState(\"\");\r\n  const [valueIsTouched, setValueIsTouched] = useState(false);\r\n\r\n  const valueIsValid = validateValue(valueEntered);\r\n  const valueHasError = !valueIsValid && valueIsTouched;\r\n\r\n  const valueHandler = (e) => {\r\n    setValueEntered(e.target.value);\r\n  };\r\n\r\n  const valueBlurHandler = (e) => {\r\n    setValueIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    setValueEntered(\"\");\r\n    setValueIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value: valueEntered,\r\n    hasError: valueHasError,\r\n    valueIsValid,\r\n    valueHandler,\r\n    valueBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useValidate;\r\n","import React from \"react\";\r\nimport classes from \"./Buttons.module.css\";\r\n\r\nfunction Buttons(props) {\r\n  const classListName = `${props.className} ${classes.btn}`;\r\n\r\n  return (\r\n    <button\r\n      className={classListName}\r\n      disabled={props.disabled}\r\n      onClick={props.onClick}\r\n      type={props.type}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Buttons_btn__2wJow\"};"],"sourceRoot":""}