{"version":3,"sources":["components/Pages/ContactUs.jsx","hooks/use-validate.jsx","components/Layout/Buttons.jsx","components/Layout/Buttons.module.css"],"names":["ContactUs","React","useState","open","setOpen","useValidate","value","trim","enteredName","nameHasErr","hasError","nameIsValid","valueIsValid","nameHandler","valueHandler","nameBlurHandler","valueBlurHandler","nameReset","reset","enteredSubject","subjectHasErr","subjectIsValid","subjectHandler","subjectBlurHandler","subjectReset","includes","enteredEmail","emailHasErr","emailIsValid","emailHandler","emailBlurHandler","emailReset","enteredMessage","messageHasErr","messageIsValid","messageHandler","messageBlurHandler","messageReset","formIsValid","handleClose","event","reason","formHandler","e","a","preventDefault","addDoc","collection","db","name","email","subject","message","timeStamp","serverTimestamp","res","console","log","id","toast","success","position","error","nameClass","subjectClass","emailClass","messageClass","className","onSubmit","type","onChange","onBlur","autoHideDuration","onClose","elevation","variant","severity","sx","width","disabled","validateValue","valueEntered","setValueEntered","valueIsTouched","setValueIsTouched","target","Buttons","props","classListName","classes","btn","onClick","children","module","exports"],"mappings":"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","file":"static/js/10.1dc42acc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport useValidate from \"../../hooks/use-validate\";\r\nimport Buttons from \"../Layout/Buttons\";\r\nimport \"./ContactUs.css\";\r\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\r\nimport { db } from \"../../firebaseConfig/Firebase\";\r\nimport { Snackbar } from \"@mui/material\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// const Alert = (props) => {\r\n//   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n// };\r\n\r\nexport default function ContactUs() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const {\r\n    value: enteredName,\r\n    hasError: nameHasErr,\r\n    valueIsValid: nameIsValid,\r\n    valueHandler: nameHandler,\r\n    valueBlurHandler: nameBlurHandler,\r\n    reset: nameReset,\r\n  } = useValidate((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    value: enteredSubject,\r\n    hasError: subjectHasErr,\r\n    valueIsValid: subjectIsValid,\r\n    valueHandler: subjectHandler,\r\n    valueBlurHandler: subjectBlurHandler,\r\n    reset: subjectReset,\r\n  } = useValidate((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    value: enteredEmail,\r\n    hasError: emailHasErr,\r\n    valueIsValid: emailIsValid,\r\n    valueHandler: emailHandler,\r\n    valueBlurHandler: emailBlurHandler,\r\n    reset: emailReset,\r\n  } = useValidate((value) => value.includes(\"@\"));\r\n\r\n  const {\r\n    value: enteredMessage,\r\n    hasError: messageHasErr,\r\n    valueIsValid: messageIsValid,\r\n    valueHandler: messageHandler,\r\n    valueBlurHandler: messageBlurHandler,\r\n    reset: messageReset,\r\n  } = useValidate((value) => value.trim() !== \"\");\r\n\r\n  let formIsValid = false;\r\n\r\n  if (nameIsValid && subjectIsValid && emailIsValid && messageIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const formHandler = async (e) => {\r\n    e.preventDefault();\r\n    setOpen(true);\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    nameReset();\r\n    subjectReset();\r\n    emailReset();\r\n    messageReset();\r\n\r\n    try {\r\n      const res = await addDoc(collection(db, \"users\"), {\r\n        name: enteredName,\r\n        email: enteredEmail,\r\n        subject: enteredSubject,\r\n        message: enteredMessage,\r\n        timeStamp: serverTimestamp(),\r\n      });\r\n      console.log(\"Document written with ID: \", res.id);\r\n      toast.success(\"You have successfully sent your message!!!\", {\r\n        position: \"bottom-left\",\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"Please try agin, your message did not go through!!!\", {\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const nameClass = nameHasErr ? \"control invalid\" : \"control\";\r\n  const subjectClass = subjectHasErr ? \"control invalid\" : \"control\";\r\n  const emailClass = emailHasErr ? \"control invalid\" : \"control\";\r\n  const messageClass = messageHasErr ? \"control invalid\" : \"control\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"product-container\">\r\n        <h3>Contact Us</h3>\r\n        <form className=\"contact-us\" onSubmit={formHandler}>\r\n          <div className={nameClass}>\r\n            <label> Name </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={enteredName}\r\n              onChange={nameHandler}\r\n              onBlur={nameBlurHandler}\r\n            />\r\n            {nameHasErr && (\r\n              <p className=\"error-text\">Please enter your name.</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className={subjectClass}>\r\n            <label>Subject</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"subject\"\r\n              value={enteredSubject}\r\n              onChange={subjectHandler}\r\n              onBlur={subjectBlurHandler}\r\n            />\r\n            {subjectHasErr && (\r\n              <p className=\"error-text\">Please enter your subject.</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className={emailClass}>\r\n            <label>Email</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={enteredEmail}\r\n              onChange={emailHandler}\r\n              onBlur={emailBlurHandler}\r\n            />\r\n            {emailHasErr && (\r\n              <p className=\"error-text\">Please enter a valid email address.</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className={messageClass}>\r\n            <label>Message</label>\r\n            <textarea\r\n              name=\"textarea\"\r\n              type=\"text\"\r\n              id=\"\"\r\n              value={enteredMessage}\r\n              onChange={messageHandler}\r\n              onBlur={messageBlurHandler}\r\n            ></textarea>\r\n            {messageHasErr && (\r\n              <p className=\"error-text\">Please enter your message</p>\r\n            )}\r\n          </div>\r\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert\r\n              elevation={6}\r\n              variant=\"filled\"\r\n              onClose={handleClose}\r\n              severity=\"success\"\r\n              sx={{ width: \"100%\" }}\r\n            >\r\n              Your Message Has Been Successfully Sent!\r\n            </Alert>\r\n          </Snackbar>\r\n\r\n          <div className=\"contact-btn\">\r\n            <Buttons disabled={!formIsValid}>Send</Buttons>\r\n          </div>\r\n          <div></div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nconst useValidate = (validateValue) => {\r\n  const [valueEntered, setValueEntered] = useState(\"\");\r\n  const [valueIsTouched, setValueIsTouched] = useState(false);\r\n\r\n  const valueIsValid = validateValue(valueEntered);\r\n  const valueHasError = !valueIsValid && valueIsTouched;\r\n\r\n  const valueHandler = (e) => {\r\n    setValueEntered(e.target.value);\r\n  };\r\n\r\n  const valueBlurHandler = (e) => {\r\n    setValueIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    setValueEntered(\"\");\r\n    setValueIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value: valueEntered,\r\n    hasError: valueHasError,\r\n    valueIsValid,\r\n    valueHandler,\r\n    valueBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useValidate;\r\n","import React from \"react\";\r\nimport classes from \"./Buttons.module.css\";\r\n\r\nfunction Buttons(props) {\r\n  const classListName = `${props.className} ${classes.btn}`;\r\n\r\n  return (\r\n    <button\r\n      className={classListName}\r\n      disabled={props.disabled}\r\n      onClick={props.onClick}\r\n      type={props.type}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Buttons_btn__2wJow\"};"],"sourceRoot":""}