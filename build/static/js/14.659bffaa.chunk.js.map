{"version":3,"sources":["components/Pages/Register.module.css","components/Pages/ResetPassword.jsx","hooks/use-validate.jsx","components/Layout/Buttons.jsx","components/Layout/Buttons.module.css"],"names":["module","exports","Login","props","resetPassword","useContext","AuthContext","query","location","useLocation","URLSearchParams","search","useQuery","navigate","useNavigate","useValidate","value","trim","length","enteredPassword","passwordInputHasErr","hasError","enteredPasswordIsValid","valueIsValid","passwordChangeHandler","valueHandler","passwordBlurHandler","valueBlurHandler","resetPasswordInput","reset","formIsValid","passwordErrClass","className","classes","login","loginTitle","loginForm","onSubmit","e","preventDefault","get","then","res","console","log","toast","success","position","catch","err","message","error","type","placeholder","loginInput","onChange","onBlur","btn","disabled","validateValue","useState","valueEntered","setValueEntered","valueIsTouched","setValueIsTouched","target","Buttons","classListName","onClick","children"],"mappings":"wHACAA,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,WAAa,6BAA6B,UAAY,4BAA4B,WAAa,+B,iCCDjJ,2HAce,SAASC,EAAMC,GAC5B,IAAQC,EAAkBC,qBAAWC,KAA7BF,cACFG,EAPS,WACf,IAAMC,EAAWC,cACjB,OAAO,IAAIC,gBAAgBF,EAASG,QAKtBC,GACRC,EAAWC,cAEjB,EAOIC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOC,OAAS,KANxCC,EADT,EACEH,MACUI,EAFZ,EAEEC,SACcC,EAHhB,EAGEC,aACcC,EAJhB,EAIEC,aACkBC,EALpB,EAKEC,iBACOC,EANT,EAMEC,MAGEC,GAAc,EAEdR,IACFQ,GAAc,GAGhB,IAyBMC,EAAmBX,EAAsB,kBAAoB,UAEnE,OACE,cAAC,WAAD,UACE,sBAAKY,UAAWC,IAAQC,MAAxB,UACE,sBAAMF,UAAWC,IAAQE,WAAzB,4BAEA,uBAAMH,UAAWC,IAAQG,UAAWC,SAhCtB,SAACC,GACnBA,EAAEC,iBAEGT,IAIL1B,EAAcG,EAAMiC,IAAI,WAAYrB,GACjCsB,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZG,IAAMC,QAAQ,+BAAgC,CAC5CC,SAAU,gBAEZlC,EAAS,eAEVmC,OAAM,SAACC,GACNN,QAAQC,IAAIK,EAAIC,SAChBL,IAAMM,MAAM,gCAAiC,CAC3CJ,SAAU,mBAIhBnB,MAUI,UACE,sBAAKI,UAAWD,EAAhB,UACE,6CACA,uBACEqB,KAAK,WACLC,YAAY,WACZrB,UAAWC,IAAQqB,WACnBC,SAAU/B,EACVR,MAAOG,EACPqC,OAAQ9B,IAETN,GACC,mBAAGY,UAAU,aAAb,6DAKJ,cAAC,IAAD,CAASA,UAAWC,IAAQwB,IAAKC,UAAW5B,EAA5C,6B,mDCnDKf,IA9BK,SAAC4C,GACnB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAEMzC,EAAeoC,EAAcE,GAgBnC,MAAO,CACL7C,MAAO6C,EACPxC,UAjBqBE,GAAgBwC,EAkBrCxC,eACAE,aAjBmB,SAACa,GACpBwB,EAAgBxB,EAAE2B,OAAOjD,QAiBzBW,iBAduB,SAACW,GACxB0B,GAAkB,IAclBnC,MAXY,WACZiC,EAAgB,IAChBE,GAAkB,O,gCCnBtB,iCAkBeE,IAff,SAAiB/D,GACf,IAAMgE,EAAa,UAAMhE,EAAM6B,UAAZ,YAAyBC,IAAQwB,KAEpD,OACE,wBACEzB,UAAWmC,EACXT,SAAUvD,EAAMuD,SAChBU,QAASjE,EAAMiE,QACfhB,KAAMjD,EAAMiD,KAJd,SAMGjD,EAAMkE,a,mBCZbrE,EAAOC,QAAU,CAAC,IAAM","file":"static/js/14.659bffaa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Register_login__3mQaN\",\"loginTitle\":\"Register_loginTitle__3H8gv\",\"loginForm\":\"Register_loginForm__PGuec\",\"loginInput\":\"Register_loginInput__1yZOS\"};","import React, { useContext } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport useValidate from \"../../hooks/use-validate\";\r\nimport Buttons from \"../Layout/Buttons\";\r\nimport classes from \"./Register.module.css\";\r\nimport { AuthContext } from \"../../store/auth-context\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useQuery = () => {\r\n  const location = useLocation();\r\n  return new URLSearchParams(location.search);\r\n};\r\n\r\nexport default function Login(props) {\r\n  const { resetPassword } = useContext(AuthContext);\r\n  const query = useQuery();\r\n  const navigate = useNavigate();\r\n\r\n  const {\r\n    value: enteredPassword,\r\n    hasError: passwordInputHasErr,\r\n    valueIsValid: enteredPasswordIsValid,\r\n    valueHandler: passwordChangeHandler,\r\n    valueBlurHandler: passwordBlurHandler,\r\n    reset: resetPasswordInput,\r\n  } = useValidate((value) => value.trim().length > 6);\r\n\r\n  let formIsValid = false;\r\n\r\n  if (enteredPasswordIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const formHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    resetPassword(query.get(\"oobCode\"), enteredPassword)\r\n      .then((res) => {\r\n        console.log(res);\r\n        toast.success(\"Your password has been reset\", {\r\n          position: \"bottom-left\",\r\n        });\r\n        navigate(\"/sign-in\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n        toast.error(\"Please enter a valid password\", {\r\n          position: \"bottom-left\",\r\n        });\r\n      });\r\n\r\n    resetPasswordInput();\r\n  };\r\n\r\n  const passwordErrClass = passwordInputHasErr ? \"control invalid\" : \"control\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.login}>\r\n        <span className={classes.loginTitle}>Reset Password</span>\r\n\r\n        <form className={classes.loginForm} onSubmit={formHandler}>\r\n          <div className={passwordErrClass}>\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              className={classes.loginInput}\r\n              onChange={passwordChangeHandler}\r\n              value={enteredPassword}\r\n              onBlur={passwordBlurHandler}\r\n            />\r\n            {passwordInputHasErr && (\r\n              <p className=\"error-text\">\r\n                Enter valid password (more than 6 character)\r\n              </p>\r\n            )}\r\n          </div>\r\n          <Buttons className={classes.btn} disabled={!formIsValid}>\r\n            Reset\r\n          </Buttons>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nconst useValidate = (validateValue) => {\r\n  const [valueEntered, setValueEntered] = useState(\"\");\r\n  const [valueIsTouched, setValueIsTouched] = useState(false);\r\n\r\n  const valueIsValid = validateValue(valueEntered);\r\n  const valueHasError = !valueIsValid && valueIsTouched;\r\n\r\n  const valueHandler = (e) => {\r\n    setValueEntered(e.target.value);\r\n  };\r\n\r\n  const valueBlurHandler = (e) => {\r\n    setValueIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    setValueEntered(\"\");\r\n    setValueIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value: valueEntered,\r\n    hasError: valueHasError,\r\n    valueIsValid,\r\n    valueHandler,\r\n    valueBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useValidate;\r\n","import React from \"react\";\r\nimport classes from \"./Buttons.module.css\";\r\n\r\nfunction Buttons(props) {\r\n  const classListName = `${props.className} ${classes.btn}`;\r\n\r\n  return (\r\n    <button\r\n      className={classListName}\r\n      disabled={props.disabled}\r\n      onClick={props.onClick}\r\n      type={props.type}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Buttons_btn__2wJow\"};"],"sourceRoot":""}